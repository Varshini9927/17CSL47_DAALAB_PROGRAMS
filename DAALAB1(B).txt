/* Program : 1(B) Write a java program to implement the stack using arrays.
Write push(), pop() and display() methods to demonstrate its working. */

import java.util.*;
class arraystack
{
int max,top;
int arr[];
arraystack(int n)
{
max=n;
arr=new int [max];
top=-1;
}
void push(int i)
{
if(top==max-1)
{
System.out.println("Stack is overflow");
}
else
{
arr[++top]=i;
}
}
void pop()
{
if(top==-1)
{
System.out.println("Stack is underflow");
}
else
{
int ele=arr[top--];
System.out.println("Deleted element="+ele);
}
}
void display()
{
if(top==-1)
{
System.out.println("Stack is empty");
return;
}
for(int i=top;i>=0;i--)
System.out.println(arr[i]+" ");
}
}
class stack
{
public static void main(String args[])
{
Scanner scan = new Scanner(System.in);
System.out.println("Enter the size of stack:");
int n=scan.nextInt();
arraystack stk=new arraystack(n);
boolean done=false;
do
{
System.out.println("\n Stack operation");
System.out.println("1.push");
System.out.println("2.pop");
System.out.println("3.display");
System.out.println("4.exit");
int choice = scan.nextInt();
switch(choice)
{
case 1: System.out.println("Enter integer elements to be pushed");
        stk.push(scan.nextInt());
        break;
case 2: stk.pop();
        break;
case 3: stk.display();
        break;
case 4: done=true;
        break;
default: System.out.println("Wrong entry");
         break;
}
}while(!done);
}
}