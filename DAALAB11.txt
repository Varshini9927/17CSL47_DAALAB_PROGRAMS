/* Program : 11 Design and implement in Java to find a subset of a given set S = {Sl, S2,.....,Sn} of n 
positive integers whose SUM is equal to a given positive integer d. For example, if 
S ={1, 2, 5, 6, 8} and d= 9, there are two solutions {1,2,6}and {1,8}. Display a suitable 
message, if the given problem instance doesn't have a solution. */

import java.util.*;
public class subset
{
public static int count,d;
public static int w[]=new int[10];
public static int x[]=new int[10];
static int n;
public static void subset(int cs,int k ,int rem)
{
x[k]=1;
if(cs+w[k]==d)
{
System.out.println("Subset solution:"+ ++count);
for(int i=0;i<=k;i++)
{
if(x[i]==1)
System.out.println(w[i]);
}
}
else if (cs+w[k]+w[k+1]<=d)
{
subset(cs+w[k],k+1,rem-w[k]);
}
if((cs+rem-w[k]>=d)&&(cs+w[k+1]<=d))
{
x[k]=0;
subset(cs,k+1,rem-w[k]);
}
}
public static void main(String args[])
{
int n,sum=0;
Scanner scan = new Scanner(System.in);
System.out.println("Enter number of elements");
n=scan.nextInt();
System.out.println("Enter elements in ascending order");
for(int i=0;i<n;i++)
w[i]=scan.nextInt();
System.out.println("Enter required sum");
d=scan.nextInt();
for(int i=0;i<n;i++)
sum=sum+w[i];
if(sum<d)
System.out.println("Solution doesnot exist");
else
{
System.out.println("Subset solution");
System.out.println("----------------");
count=0;
subset(0,0,sum);
}
}
}
